<html>

<head>
<meta charset="UTF-8">
<style>
<!--
 /* Font Definitions */
 @font-face
  {font-family:Calibri;
  panose-1:2 15 5 2 2 2 4 3 2 4;
  mso-font-charset:0;
  mso-generic-font-family:swiss;
  mso-font-pitch:variable;
  mso-font-signature:-536870145 1073786111 1 0 415 0;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
  {mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-parent:"";
  margin-top:0cm;
  margin-right:0cm;
  margin-bottom:10.0pt;
  margin-left:0cm;
  line-height:115%;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"Calibri","sans-serif";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;
  mso-bidi-font-family:"Times New Roman";}
p.MsoPlainText, li.MsoPlainText, div.MsoPlainText
  {mso-style-noshow:yes;
  mso-style-priority:99;
  mso-style-link:"Texto sin formato Car";
  margin:0cm;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"Courier New";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  margin-top:0cm;
  margin-right:0cm;
  margin-bottom:10.0pt;
  margin-left:36.0pt;
  mso-add-space:auto;
  line-height:115%;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"Calibri","sans-serif";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;
  mso-bidi-font-family:"Times New Roman";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-type:export-only;
  margin-top:0cm;
  margin-right:0cm;
  margin-bottom:0cm;
  margin-left:36.0pt;
  margin-bottom:.0001pt;
  mso-add-space:auto;
  line-height:115%;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"Calibri","sans-serif";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;
  mso-bidi-font-family:"Times New Roman";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-type:export-only;
  margin-top:0cm;
  margin-right:0cm;
  margin-bottom:0cm;
  margin-left:36.0pt;
  margin-bottom:.0001pt;
  mso-add-space:auto;
  line-height:115%;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"Calibri","sans-serif";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;
  mso-bidi-font-family:"Times New Roman";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
  {mso-style-priority:34;
  mso-style-unhide:no;
  mso-style-qformat:yes;
  mso-style-type:export-only;
  margin-top:0cm;
  margin-right:0cm;
  margin-bottom:10.0pt;
  margin-left:36.0pt;
  mso-add-space:auto;
  line-height:115%;
  mso-pagination:widow-orphan;
  font-size:11.0pt;
  font-family:"Calibri","sans-serif";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;
  mso-bidi-font-family:"Times New Roman";}
span.TextosinformatoCar
  {mso-style-name:"Texto sin formato Car";
  mso-style-noshow:yes;
  mso-style-priority:99;
  mso-style-unhide:no;
  mso-style-locked:yes;
  mso-style-link:"Texto sin formato";
  font-family:"Courier New";
  mso-ascii-font-family:"Courier New";
  mso-hansi-font-family:"Courier New";
  mso-bidi-font-family:"Courier New";}
p.msoplaintext1, li.msoplaintext1, div.msoplaintext1
  {mso-style-name:msoplaintext1;
  mso-style-unhide:no;
  margin:0cm;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"Courier New";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;}
p.msoplaintext2, li.msoplaintext2, div.msoplaintext2
  {mso-style-name:msoplaintext2;
  mso-style-unhide:no;
  margin:0cm;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"Courier New";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;}
p.msoplaintext3, li.msoplaintext3, div.msoplaintext3
  {mso-style-name:msoplaintext3;
  mso-style-unhide:no;
  margin:0cm;
  margin-bottom:.0001pt;
  mso-pagination:widow-orphan;
  font-size:10.0pt;
  font-family:"Courier New";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;}
p.msopapdefault, li.msopapdefault, div.msopapdefault
  {mso-style-name:msopapdefault;
  mso-style-unhide:no;
  mso-margin-top-alt:auto;
  margin-right:0cm;
  margin-bottom:10.0pt;
  margin-left:0cm;
  line-height:115%;
  mso-pagination:widow-orphan;
  font-size:12.0pt;
  font-family:"Times New Roman","serif";
  mso-fareast-font-family:"Times New Roman";
  mso-fareast-theme-font:minor-fareast;}
span.apple-converted-space
  {mso-style-name:apple-converted-space;
  mso-style-unhide:no;}
span.SpellE
  {mso-style-name:"";
  mso-spl-e:yes;}
span.GramE
  {mso-style-name:"";
  mso-gram-e:yes;}
.MsoChpDefault
  {mso-style-type:export-only;
  mso-default-props:yes;
  font-size:10.0pt;
  mso-ansi-font-size:10.0pt;
  mso-bidi-font-size:10.0pt;}
@page WordSection1
  {size:612.0pt 792.0pt;
  margin:70.85pt 3.0cm 70.85pt 3.0cm;
  mso-header-margin:35.4pt;
  mso-footer-margin:35.4pt;
  mso-paper-source:0;}
div.WordSection1
  {page:WordSection1;}
table.MsoPlainText2 {mso-style-link:"Texto sin formato Car";
  margin:0cm;
  margin-bottom:.0001pt;
  font-size:10.0pt;
  font-family:"Courier New";}
table.MsoPlainText2 th, td {mso-style-link:"Texto sin formato Car";
  vertical-align: top;
  text-align:left;
  padding-right:0.5cm;
  white-space:pre-wrap;}
-->
</style>
</head>

<body lang=EN-US-UY style='tab-interval:35.4pt'>

<div class=WordSection1>

<div style='border:solid windowtext 1.0pt;padding:1.0pt 4.0pt 1.0pt 4.0pt;background:#339966;color:white;font-size:12.0pt;'>

<p class=msoplaintext1>&nbsp;</p>

<p class=msoplaintext1><span style='font-size:12.0pt;'><b><u>HMG</u> Unicode String Functions</b></span><br>
<i>HMG string functions that support Unicode</i></p>

<p class=msoplaintext1>&nbsp;</p>

</div>

<p class=msoplaintext1>&nbsp;</p>

<p class=msoplaintext1>&nbsp;</p>

<p class=msoplaintext2 style='text-align:justify'>To work around some of the 
limitations of Harbour UTF-8 functions, HMG has the following analogs of 
Harbour functions.  The HMG functions correctly handle all UTF-8 characters. 
See <a href="HMG_Unicode_Supplemental_Plane.htm">CESU-8 and Unicode 
Supplemental Plane Characters in HMG</a>.</p>

<p class=msoplaintext1>&nbsp;</p>

<table class=MsoPlainText2 style="margin-left: 0.25in">
  <tr><td><b><u>ANSI/UNICODE</u></b></td><td></td><td><u>ANSI Only</u></td></tr>
  <tr><td>&nbsp;</td></tr>
  <tr><td><b>HMG_ASC()           </b></td><td>&lt;=&gt;</td><td>ASC()                   </td></tr>
  <tr><td><b>HMG_ASCPOS()        </b></td><td>&lt;=&gt;</td><td>ASCPOS()                </td></tr>
  <tr><td><b>HMG_AT()            </b></td><td>&lt;=&gt;</td><td>AT()                    </td></tr>
  <tr><td><b>HMG_CHR()           </b></td><td>&lt;=&gt;</td><td>CHR()                   </td></tr>
  <tr><td><b>HMG_ISALPHA()       </b></td><td>&lt;=&gt;</td><td>ISALPHA()               </td></tr>
  <tr><td><b>HMG_ISALPHANUMERIC()</b></td><td>&lt;=&gt;</td><td>ISALPHA() .OR. ISDIGIT()</td></tr>
  <tr><td><b>HMG_ISDIGIT()       </b></td><td>&lt;=&gt;</td><td>ISDIGIT()               </td></tr>
  <tr><td><b>HMG_ISLOWER()       </b></td><td>&lt;=&gt;</td><td>ISLOWER()               </td></tr>
  <tr><td><b>HMG_ISUPPER()       </b></td><td>&lt;=&gt;</td><td>ISUPPER()               </td></tr>
  <tr><td><b>HMG_LEFT()          </b></td><td>&lt;=&gt;</td><td>LEFT()                  </td></tr>
  <tr><td><b>HMG_LEN()           </b></td><td>&lt;=&gt;</td><td>LEN()                   </td></tr>
  <tr><td><b>HMG_LOWER()         </b></td><td>&lt;=&gt;</td><td>LOWER()                 </td></tr>
  <tr><td><b>HMG_PADC()          </b></td><td>&lt;=&gt;</td><td>PADC()                  </td></tr>
  <tr><td><b>HMG_PADL()          </b></td><td>&lt;=&gt;</td><td>PADL()                  </td></tr>
  <tr><td><b>HMG_PADR()          </b></td><td>&lt;=&gt;</td><td>PADR()                  </td></tr>
  <tr><td><b>HMG_PEEK()          </b></td><td>&lt;=&gt;</td><td>HB_BPEEK()              </td></tr>
  <tr><td><b>HMG_POKE()          </b></td><td>&lt;=&gt;</td><td>HB_BPOKE()              </td></tr>
  <tr><td><b>HMG_RAT()           </b></td><td>&lt;=&gt;</td><td>RAT()                   </td></tr>
  <tr><td><b>HMG_RIGHT()         </b></td><td>&lt;=&gt;</td><td>RIGHT()                 </td></tr>
  <tr><td><b>HMG_STUFF()         </b></td><td>&lt;=&gt;</td><td>STUFF()                 </td></tr>
  <tr><td><b>HMG_SUBSTR()        </b></td><td>&lt;=&gt;</td><td>SUBSTR()                </td></tr>
  <tr><td><b>HMG_UPPER()         </b></td><td>&lt;=&gt;</td><td>UPPER()                 </td></tr>
</table>

<p class=msoplaintext1>&nbsp;</p>

<p class=msoplaintext2 style='text-align:justify'>All of the above HMG 
functions, except <a href="HMG_Chr.htm">HMG_CHR()</a>, accept either UTF-8 or 
CESU-8 input strings. HMG_LEFT(), HMG_PAD*(), HMG_RIGHT(), HMG_SUBSTR(), and 
HMG_STUFF() return UTF-8 or CESU-8, depending on the input string.</p>

<p class=msoplaintext1>&nbsp;</p>

<p class=msoplaintext2 style='text-align:justify'>HMG also includes the 
following functions for handling UTF-8 and CESU-8 strings.</p>

<p class=msoplaintext1>&nbsp;</p>

<table class=MsoPlainText2 style="margin-left: 0.25in">
  <tr><td><b><a href="HMG_Cesu8.htm"              >HMG_CESU8()</a>              </b></td><td>Converts UTF-8 string to CESU-8 string                               </td></tr>
  <tr><td><b><a href="HMG_EscapeToUtf8.htm"       >HMG_ESCAPETOUTF8()</a>       </b></td><td>Converts Unicode escape string to UTF-8 string                       </td></tr>
  <tr><td><b><a href="HMG_GetUnicodeCharacter.htm">HMG_GETUNICODECHARACTER()</a></b></td><td>Converts array of Unicode code points to UTF-8 string                </td></tr>
  <tr><td><b><a href="HMG_GetUnicodeValue.htm"    >HMG_GETUNICODEVALUE()</a>    </b></td><td>Converts UTF-8 string to array of Unicode code points                </td></tr>
  <tr><td><b><a href="HMG_HasSPChar.htm"          >HMG_HASSPCHAR()</a>          </b></td><td>Determines whether UTF-8 string has any supplemental plane characters</td></tr>
  <tr><td><b><a href="HMG_IsUtf8.htm"             >HMG_ISUTF8()</a>             </b></td><td>Determines whether string is valid UTF-8                             </td></tr>
  <tr><td><b><a href="HMG_StrCmp.htm"             >HMG_STRCMP()</a>             </b></td><td>Compares two UTF-8 strings                                           </td></tr>
  <tr><td><b><a href="HMG_UnCesu8.htm"            >HMG_UNCESU8()</a>            </b></td><td>Converts CESU-8 string to UTF-8 string                               </td></tr>
  <tr><td><b><a href="HMG_Utf8Crawl.htm"          >HMG_UTF8CRAWL()</a>          </b></td><td>Traverses UTF-8 string                                               </td></tr>
  <tr><td><b><a href="HMG_Utf8ToEscape.htm"       >HMG_UTF8TOESCAPE()</a>       </b></td><td>Converts UTF-8 string to Unicode escape string                       </td></tr>
  <tr><td><b><a href="U.htm"                      >U()</a>                      </b></td><td>Pseudofunction for UTF-8 character constant                          </td></tr>
  <tr><td><b><a href="W.htm"                      >W()</a>                      </b></td><td>Pseudofunction for CESU-8 character constant                         </td></tr>
  <tr><td><b                                      >UTF8_BOM                </b     ></td><td>Manifest constant for UTF-8 byte order mark                          </td></tr>
</table>

</div>

</body>

</html>
